import { Link } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { ArrowRight, CheckCircle, Users, Clock, Shield, Star } from "lucide-react";
import heroImage from "@/assets/hero-bg.jpg";
import { skillCategories, mockUsers, mockReviews } from "@/lib/mockData";
import { useState, useEffect, useRef } from "react";

// Custom animated counter component
const AnimatedCounter = ({ end, suffix = "", duration = 2000 }) => {
  const [count, setCount] = useState(0);
  const [hasAnimated, setHasAnimated] = useState(false);
  const ref = useRef(null);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting && !hasAnimated) {
          setHasAnimated(true);
          let start = 0;
          const increment = end / (duration / 16);
          
          const timer = setInterval(() => {
            start += increment;
            if (start >= end) {
              setCount(end);
              clearInterval(timer);
            } else {
              setCount(Math.floor(start));
            }
          }, 16);
        }
      },
      { threshold: 0.3 }
    );

    if (ref.current) {
      observer.observe(ref.current);
    }

    return () => {
      if (ref.current) {
        observer.unobserve(ref.current);
      }
    };
  }, [end, duration, hasAnimated]);

  return (
    <div ref={ref} className="text-center">
      <div className="text-5xl md:text-6xl lg:text-7xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-cyan-300 leading-tight">
        {count.toLocaleString()}
        {suffix && (
          <span className={`text-orange-500 ${suffix === "%" ? "align-baseline" : "align-super"} text-4xl md:text-5xl lg:text-6xl`}>
            {suffix}
          </span>
        )}
      </div>
    </div>
  );
};

const HomeNew = () => {
  return (
    <div className="flex flex-col">
      {/* Hero Section */}
      <section className="relative overflow-hidden hero-gradient">
        <div
          className="absolute inset-0 opacity-30"
          style={{
            backgroundImage: `url(${heroImage})`,
            backgroundSize: "cover",
            backgroundPosition: "center",
          }}
        />
        <div className="container relative py-16 md:py-32 px-4 sm:px-6">
          <div className="mx-auto max-w-3xl text-center animate-fade-in-up">
            <h1 className="text-3xl sm:text-4xl md:text-5xl font-bold leading-tight text-center mb-6">
              CHUNG TAY TRAO ƒê·ªîI L·∫§P ƒê·∫¶Y K·ª∏ NƒÇNG
            </h1>

            <p className="text-base sm:text-lg md:text-xl text-muted-foreground mb-8 max-w-2xl mx-auto leading-relaxed">
              Bi·∫øn k·ªπ nƒÉng th√†nh t√†i s·∫£n. D√πng th·ªùi gian ƒë·∫ßu t∆∞ cho tri th·ª©c. C√πng ki·∫øn t·∫°o m·ªôt v√≤ng tr√≤n cho v√† nh·∫≠n kh√¥ng ng·ª´ng
            </p>
            <div className="flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center">
              <Link to="/profile/create">
                <Button variant="hero" size="lg" className="w-full sm:w-auto text-sm sm:text-base">
                  T·∫°o H·ªì S∆° Ngay
                  <ArrowRight className="ml-2 h-4 w-4 sm:h-5 sm:w-5" />
                </Button>
              </Link>
              <Link to="/marketplace">
                <Button variant="outline" size="lg" className="w-full sm:w-auto text-sm sm:text-base">
                  Xem Ch·ª£ K·ªπ NƒÉng
                </Button>
              </Link>
            </div>
          </div>
        </div>
      </section>

      {/* How It Works - Redesigned */}
      <section className="relative py-16 md:py-28 overflow-hidden">
        {/* Subtle Gradient Background */}
        <div className="absolute inset-0 bg-gradient-to-br from-blue-50/30 via-white to-indigo-50/20" />
        
        <div className="container relative px-4 sm:px-6">
          <div className="text-center mb-12 md:mb-16">
            <h2 className="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold mb-4 md:mb-6 text-gray-900">
              Gi·ªõi thi·ªáu chung v·ªÅ Skill Swap Connect
            </h2>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8 max-w-6xl mx-auto">
            {[
              {
                step: "1",
                title: "M·ª•c ti√™u",
                description: "X√¢y d·ª±ng m·ªôt c·ªông ƒë·ªìng h·ªçc t·∫≠p ngang h√†ng, n∆°i m·ªçi ng∆∞·ªùi c√≥ th·ªÉ s·ª≠ d·ª•ng ch√≠nh k·ªπ nƒÉng v√† th·ªùi gian c·ªßa m√¨nh l√†m ph∆∞∆°ng ti·ªán trao ƒë·ªïi ƒë·ªÉ h·ªçc h·ªèi l·∫´n nhau.",
                icon: Users,
                delay: "0ms",
              },
              {
                step: "2",
                title: "Gi√° tr·ªã c·ªët l√µi",
                description: "Skill Swap Connect ƒë∆∞·ª£c x√¢y d·ª±ng d·ª±a tr√™n 3 h·ªá gi√° tr·ªã c·ªët l√µi ch√≠nh l√† Chia s·∫ª - K·∫øt n·ªëi - V∆∞∆°n xa.",
                icon: Clock,
                delay: "100ms",
              },
              {
                step: "3",
                title: "T·∫ßm nh√¨n",
                description: "Skill Swap Connect l√† 1 trong nh·ªØng ƒë∆°n v·ªã ti√™n phong t·∫°i Vi·ªát Nam x√¢y d·ª±ng m√¥ h√¨nh trao ƒë·ªïi k·ªπ nƒÉng m√† kh√¥ng b·ªã gi·ªõi h·∫°n b·ªüi r√†o c·∫£n t√†i ch√≠nh.",
                icon: CheckCircle,
                delay: "200ms",
              },
            ].map((item) => (
              <Card
               key={item.step}
               className="group p-6 md:p-8 text-center bg-white/80 backdrop-blur-sm border border-gray-200/60 rounded-xl md:rounded-2xl shadow-md hover:shadow-xl transition-all duration-500 hover:-translate-y-1 md:hover:-translate-y-2 animate-fade-in-up"
               style={{ animationDelay: item.delay }}
             >
               {/* Circular Gradient Number Badge */}
               <div className="relative mb-4 md:mb-6">
                 <div className="absolute inset-0 rounded-full bg-white/10 backdrop-blur-sm border border-white/20" />

                 <div className="relative flex h-12 w-12 md:h-16 md:w-16 items-center justify-center rounded-full bg-gradient-to-br from-blue-500 to-indigo-600 text-white font-bold text-lg md:text-xl shadow-lg mx-auto">
                   {item.step}
                 </div>
               </div>

               {/* Icon */}
               <div className="mb-3 md:mb-4">
                 <item.icon className="h-8 w-8 md:h-12 md:w-12 text-blue-600 mx-auto group-hover:scale-110 transition-transform duration-300" />
               </div>

               {/* Content */}
               <h3 className="text-lg md:text-xl lg:text-2xl font-bold text-gray-900 mb-3 md:mb-4 group-hover:text-blue-600 transition-colors duration-300">
                 {item.title}
               </h3>
               <p className="text-gray-600 leading-relaxed text-sm md:text-base lg:text-lg text-left">
                 {item.description}
               </p>
             </Card>
            ))}
          </div>

          {/* Time Banking Info */}
          <div className="mt-12 md:mt-16 max-w-4xl mx-auto">
            <Card className="p-6 md:p-8 bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200/50 rounded-xl md:rounded-2xl shadow-sm">
              <div className="flex flex-col md:flex-row items-center gap-4 md:gap-6">
                <div className="text-4xl md:text-5xl">üí°</div>
                <div className="text-center md:text-left">
                  <h4 className="text-lg md:text-xl font-bold text-gray-900 mb-2 md:mb-3">Ng√¢n H√†ng Th·ªùi Gian - C√¥ng B·∫±ng Cho M·ªçi Ng∆∞·ªùi</h4>
                  <p className="text-gray-700 leading-relaxed text-sm md:text-base">
                    <strong className="text-blue-600">1 gi·ªù = 10 Edits</strong> T·∫°i Skill Swap Connect, ch√∫ng t√¥i tin r·∫±ng th·ªùi gian c·ªßa m·ªói ng∆∞·ªùi ƒë·ªÅu qu√Ω gi√° nh∆∞ nhau. M·ªói gi·ªù b·∫°n d√†nh ƒë·ªÉ chia s·∫ª k·ªπ nƒÉng ƒë·ªÅu ƒë∆∞·ª£c ghi nh·∫≠n c√¥ng b·∫±ng, b·∫•t k·ªÉ ƒë√≥ l√† k·ªπ nƒÉng g√¨.
                  </p>
                </div>
              </div>
            </Card>
          </div>
        </div>
      </section>

      {/* Community Achievements */}
      <section className="py-16 md:py-28 bg-gradient-to-r from-blue-900 via-indigo-800 to-purple-700">
        <div className="container px-4 sm:px-6">
          <div className="text-center mb-12 md:mb-16">
            <h2 className="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold mb-4 md:mb-6 text-white">
              Th√†nh T·ª±u C·ªông ƒê·ªìng Skill Swap Connect
            </h2>
            <p className="text-base sm:text-lg md:text-xl text-gray-200 max-w-2xl mx-auto leading-relaxed">
              C√πng nh√¨n l·∫°i h√†nh tr√¨nh ph√°t tri·ªÉn v√† nh·ªØng con s·ªë ·∫•n t∆∞·ª£ng c·ªßa ch√∫ng t√¥i
            </p>
          </div>

          <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6 max-w-6xl mx-auto">
            {[
              {
                value: 5000,
                suffix: "+",
                label: "Th√†nh vi√™n t√≠ch c·ª±c",
                description: "Ng∆∞·ªùi d√πng ƒëang trao ƒë·ªïi k·ªπ nƒÉng m·ªói ng√†y"
              },
              {
                value: 1200,
                suffix: "+",
                label: "Phi√™n trao ƒë·ªïi k·ªπ nƒÉng",
                description: "Bu·ªïi h·ªçc ƒë√£ ƒë∆∞·ª£c th·ª±c hi·ªán th√†nh c√¥ng"
              },
              {
                value: 98,
                suffix: "%",
                label: "M·ª©c ƒë·ªô h√†i l√≤ng",
                description: "Ng∆∞·ªùi d√πng h√†i l√≤ng v·ªõi tr·∫£i nghi·ªám"
              },
              {
                value: 30,
                suffix: "+",
                label: "ƒê·ªëi t√°c & c·ªông ƒë·ªìng",
                description: "T·ªï ch·ª©c h·ª£p t√°c c√πng ph√°t tri·ªÉn"
              }
            ].map((stat, index) => (
              <div
               key={index}
               className="group flex flex-col items-center justify-center p-4 md:p-6 lg:p-8 rounded-xl md:rounded-2xl bg-white/5 backdrop-blur-sm border border-white/10 hover:scale-105 hover:brightness-110 transition-all duration-500 cursor-pointer min-h-[120px] md:min-h-[160px] lg:min-h-[200px]"
             >
               <div className="flex flex-col items-center justify-center flex-1">
                 <AnimatedCounter
                   end={stat.value}
                   suffix={stat.suffix}
                   duration={2000}
                 />
                 <h3 className="text-sm md:text-base lg:text-lg font-bold text-white mt-2 md:mt-4 mb-1 md:mb-2 text-center">
                   {stat.label}
                 </h3>
                 <p className="text-gray-200 text-center text-xs md:text-sm leading-relaxed">
                   {stat.description}
                 </p>
               </div>
             </div>
            ))}
          </div>
        </div>
      </section>

      {/* Highlights */}
      <section className="container py-12 md:py-24 bg-muted/30 px-4 sm:px-6">
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6">
          {[
            {
              icon: CheckCircle,
              title: "Mi·ªÖn Ph√≠ S·ª≠ D·ª•ng",
              description: "Kh√¥ng t·ªën ph√≠ ƒëƒÉng k√Ω. C√≥ g√≥i Edits n·∫øu b·∫°n c·∫ßn th√™m.",
            },
            {
              icon: Shield,
              title: "C√¥ng B·∫±ng Tuy·ªát ƒê·ªëi",
              description: "1 gi·ªù = 10 Edits cho t·∫•t c·∫£. M·ªçi k·ªπ nƒÉng ƒë·ªÅu c√≥ gi√° tr·ªã nh∆∞ nhau.",
            },
            {
              icon: Star,
              title: "ƒê√°nh Gi√° L·∫´n Nhau X√¢y D·ª±ng Uy T√≠n",
              description: "H·ªá th·ªëng ƒë√°nh gi√° gi√∫p duy tr√¨ ch·∫•t l∆∞·ª£ng v√† an to√†n.",
            },
            {
              icon: Clock,
              title: "H·ªçc B·∫•t C·ª© L√∫c N√†o, ·ªû ƒê√¢u C≈©ng ƒê∆∞·ª£c",
              description: "Online hay offline ƒë·ªÅu ƒë∆∞·ª£c. L·ªãch c·ªßa b·∫°n, b·∫°n quy·∫øt.",
            },
          ].map((item, index) => (
            <Card key={index} className="p-4 md:p-6 text-center shadow-soft">
              <item.icon className="h-8 w-8 md:h-10 md:w-10 mx-auto text-primary mb-2 md:mb-3" />
              <h3 className="font-semibold text-sm md:text-base mb-1 md:mb-2">{item.title}</h3>
              <p className="text-xs md:text-sm text-muted-foreground">{item.description}</p>
            </Card>
          ))}
        </div>
      </section>

      {/* Featured Categories */}
      <section className="container py-12 md:py-24 px-4 sm:px-6">
        <div className="text-center mb-8 md:mb-12">
          <h2 className="text-2xl sm:text-3xl md:text-4xl font-bold mb-3 md:mb-4">C√°c K·ªπ NƒÉng Ph·ªï Bi·∫øn</h2>
          <p className="text-base md:text-lg text-muted-foreground">Kh√°m ph√° nh·ªØng g√¨ b·∫°n c√≥ th·ªÉ h·ªçc ho·∫∑c d·∫°y</p>
        </div>

        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6">
          {skillCategories.map((category) => (
            <Card key={category.name} className="p-4 md:p-6 hover-lift cursor-pointer shadow-soft">
              <div className="text-3xl md:text-4xl mb-2 md:mb-3">{category.icon}</div>
              <h3 className="text-lg md:text-xl font-semibold mb-2 md:mb-3">{category.name}</h3>
              <div className="flex flex-wrap gap-1 md:gap-2">
                {category.tags.map((tag) => (
                  <Badge key={tag} variant="outline" className="text-xs">
                    {tag}
                  </Badge>
                ))}
              </div>
            </Card>
          ))}
        </div>
      </section>

      {/* G∆Ø∆†NG M·∫∂T TI√äU BI·ªÇU */}
      <section className="container py-12 md:py-24 px-4 sm:px-6">
        <div className="text-center mb-8 md:mb-12">
          <h2 className="text-2xl sm:text-3xl md:text-4xl font-bold mb-3 md:mb-4">T·∫°i sao m·ªçi ng∆∞·ªùi ch·ªçn Skill Swap Connect</h2>
        </div>

        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6">
          {[
            {
              name: "L√™ ƒê·ª©c Anh",
              quote: "Skill Swap Connect gi√∫p t√¥i h·ªçc k·ªπ nƒÉng thi·∫øt k·∫ø trong khi v·∫´n c√¢n b·∫±ng c√¥ng vi·ªác v√† gia ƒë√¨nh.",
              avatar: "üë©‚Äçüíº",
            },
            {
              name: "Nguy·ªÖn Th·ªã Minh",
              quote: "T√¥i t√¨m l·∫°i ƒë∆∞·ª£c ni·ªÅm tin v√†o b·∫£n th√¢n khi d·∫°y ng∆∞·ªùi kh√°c k·ªπ nƒÉng m√¨nh c√≥.",
              avatar: "üë®‚Äçüè´",
            },
            {
              name: "H√† Minh Anh",
              quote: "T√¥i c·∫£m th·∫•y t·ª± tin h∆°n v√† b·∫Øt ƒë·∫ßu h∆∞·ªõng d·∫´n ƒë·ªìng nghi·ªáp.",
              avatar: "üë®‚Äçüíº",
            },
            {
              name: "L·∫°i Quang Nam",
              quote: "H·ªçc v·ªõi c·ªông ƒë·ªìng SWC gi√∫p t√¥i m·ªü r·ªông g√≥c nh√¨n to√†n c·∫ßu.",
              avatar: "üë®‚Äçüéì",
            },
          ].map((testimonial, index) => (
            <Card key={index} className="p-4 md:p-6 text-center bg-white border border-gray-200 rounded-lg md:rounded-xl shadow-sm hover:shadow-md transition-all duration-300 hover:-translate-y-1">
              <div className="flex justify-center mb-3 md:mb-4">
                <div className="w-12 h-12 md:w-16 md:h-16 rounded-full bg-gradient-to-br from-blue-100 to-indigo-100 flex items-center justify-center text-xl md:text-2xl">
                  {testimonial.avatar}
                </div>
              </div>
              <h3 className="font-bold text-gray-900 text-sm md:text-base mb-2 md:mb-3">{testimonial.name}</h3>
              <p className="text-gray-600 leading-relaxed text-xs md:text-sm italic">
                "{testimonial.quote}"
              </p>
            </Card>
          ))}
        </div>
      </section>

     

      {/* Final CTA */}
      <section className="container py-12 md:py-24 px-4 sm:px-6">
        <div className="rounded-xl md:rounded-2xl bg-primary/5 border-2 border-primary/20 p-6 md:p-8 lg:p-12 text-center">
          <h2 className="text-2xl sm:text-3xl md:text-4xl font-bold mb-3 md:mb-4">B·∫Øt ƒê·∫ßu H·ªçc - D·∫°y Ngay H√¥m Nay</h2>
          <p className="text-base md:text-lg text-muted-foreground mb-6 md:mb-8 max-w-2xl mx-auto">
            C√πng h√†ng ngh√¨n ng∆∞·ªùi ƒëang trao ƒë·ªïi k·ªπ nƒÉng m·ªói ng√†y
          </p>
          <Link to="/marketplace">
            <Button variant="hero" size="lg" className="text-sm md:text-base">
              ƒêƒÉng K√Ω Ngay
              <ArrowRight className="ml-2 h-4 w-4 md:h-5 md:w-5" />
            </Button>
          </Link>
        </div>
      </section>
    </div>
  );
};

export default HomeNew;